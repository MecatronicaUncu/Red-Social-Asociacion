#!/bin/bash

NEO4J_VER=2.3.3

MY_PATH="`dirname \"$0\"`" 
MY_PATH="`( cd \"$MY_PATH\" && pwd )`"  # absolutized and normalized

BIN_DIR=../server/bin
NEO4J_DIR=$BIN_DIR/neo4j-community-$NEO4J_VER
LOG_FILE=$MY_PATH/config.log

CONS_DIV="#####################################"
R_COL="\e[31m"
Y_COL="\e[33m"
G_COL="\e[92m"
DEF_COL="\e[39m"

function loggerGreen {
	echo -e $G_COL$1$DEF_COL
	echo -e $1 >> $LOG_FILE
}

function loggerRed {
	echo -e >&2 $R_COL$1$DEF_COL
	echo -e $1 >> $LOG_FILE
}

function loggerYellow {
	echo -e >&2 $Y_COL$1$DEF_COL
	echo -e $1 >> $LOG_FILE
}

#-----------------------------------------#

loggerGreen "\nNeo4J server password CHANGE\n"

#----------------------------------------#

# Getting in the right location

if [ -z "$MY_PATH" ] ; then
  # error; for some reason, the path is not accessible
  # to the script (e.g. permissions re-evaled after suid)
  loggerRed "Please verify permissions on bootstrap folder!\n"
  exit 1  # fail
fi
cd "$MY_PATH"

#-----------------------------------------#
# Start Neo4J server

STATUS=`./$NEO4J_DIR/bin/neo4j status`
if [[ $STATUS == *"not"* ]]
then
    loggerGreen "Starting Neo4J Server...\n"
	./$BIN_DIR/neoRun >/dev/null 2>&1 || { loggerRed "Error starting Neo4J Server!\n"; exit 1; }
fi

#-----------------------------------------#
# Set new Neo4J server password

stty -echo
printf $Y_COL"Enter old password: "$DEF_COL
read OLDPASSWORD
printf "\n\n"
stty echo

if [[ $# -eq 0 ]]
then
    stty -echo
    printf $Y_COL"Enter new password: "$DEF_COL
    read PASSWORD
    printf "\n\n"
    stty echo
else
    PASSWORD="$1"
fi

while [[ "$PASSWORD" == "neo4j" ]]
do
    stty -echo
    printf $Y_COL"Enter a different password ('neo4j' not possible): "$DEF_COL
    read PASSWORD
    printf "\n\n"
    stty echo
done

RETURN=$(curl -H "Content-Type: application/json" -X POST -d "{\"password\":\"$PASSWORD\"}" -u neo4j:$OLDPASSWORD http://localhost:4550/user/neo4j/password 2>&1 || { loggerRed "Could not change server password. Are you sure your Neo4J server is up and running?\n"; exit 1; })

if [[ $RETURN == *"errors"* ]]; then
	loggerRed "Password change Failed!\n"
else
    loggerGreen "Password change Successful!\n"
    # Set Neo4J user and password in testDataset/{usersRel.js, regUsers.js}
	sed -i "s/^\(.*\)'http.*:\/\/neo4j:.*@localhost:.*'$/\1'http:\/\/neo4j:$PASSWORD@localhost:4550'/" ./testDataset/usersRel.js
	sed -i "s/^\(.*\)'http.*:\/\/neo4j:.*@localhost:.*'$/\1'http:\/\/neo4j:$PASSWORD@localhost:4550'/" ./testDataset/regUsers.js
	# Set Neo4J user and password in routes
	sed -i "s/^\(.*\)'http.*:\/\/neo4j:.*@localhost:.*'$/\1'http:\/\/neo4j:$PASSWORD@localhost:4550'/" $BIN_DIR/../routes/*.js
fi

#-----------------------------------------#
# Stop Neo4J
loggerGreen "Stopping Neo4J Server...\n"
./$BIN_DIR/neoStop >/dev/null 2>&1 || { loggerRed "Error stopping Neo4J server\n"; exit 1; }

